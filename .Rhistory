demo()
add <- function(x,y)
{
return x+y
}
add <- function(x,y)
{
x+y
}
add (5555555,324234234)
search()
library(stats)
search()
add <- function(x,y)
{
x+y+z
}
z <- 55
add(5,4)
x <- list(a=1:10, b=rnorm(10))
lapply(x, mean)
x <- list(a=1:10, b=rnorm(10))
sapply(x, mean)
log(-1)
log(0)
log(1)
source("pollutantmean.r")
mean(na
)
mean(NA)
debug(mean)
mean
debug(mean)
mean(x)
debug(mean)
x <- 1:10
mean(x)
x <- 1:10000000
mean(x)
y = x^2 + 9
x = 1:5
y
y = x^2 + 9
x = 5
y
plot(y)
y = x^2 + 9
x = 50
plot(y)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:50)
cachemean(50)
cachemean(list(1:50, 400:500))
help("<<-")
mean(x = 1:10)
x
mean(x <- 1:10)
x
cachemean(10)
makeVector(1:10)
cachemean(1:10)
cachemean(5)
numeric?
?numeric
assignme <- function(x)
{
y <- x+10
y
}
assignme(5)
y <- 20
assignme(7)
assignme <- function(x)
{
y <<- x+10
y
}
assignme(5)
y <- 6
assignme(20)
y <- 56
assignme <- function(x)
{
y <<- x+10
y
}
assignme(9)
assignme()
y <- 56
assignme <- function(x)
{
y <- x+10
y
}
assignme(15)
y <- 5
assignme(40)
makeVector(1:10)
cachemean(data.frame(x <- 1:10, y<- 40:50))
cachemean(data.frame(x <- 1:10, y<- 40:49))
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean(makeVector(1:100000))
cachemean(makeVector(1:100000))
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
print("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean <- function(x, ...) {
m <- x$getmean()
browser()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x <- 1:10
cachemean(makeVector(x))
cachemean(makeVector(x))
cachemean(makeVector(x))
x <- makeVector(a:10)
x <- makeVector(1:10)
cachemean(x)
cachemean(x)
source("cachematrix.R")
setwd("D:/Personal/Data Science/Courses/R Programming/Programming Assignment 2/ProgrammingAssignment2")
source("cachematrix.R")
m <- makeCacheMatrix(matrix(1:9, nrow=3, ncol=3))
cacheSolve(m)
cacheSolve(m)
source("cachematrix.R")
m <- makeCacheMatrix(matrix(1:9, nrow=3, ncol=3))
cacheSolve(m)
m <- makeCacheMatrix(matrix(3:11, nrow=3, ncol=3))
cacheSolve(m)
m <- makeCacheMatrix(matrix(c(1,1,1,3,4,3,3,3,4), nrow=3, ncol=3))
cacheSolve(m)
source("cachematrix.R")
m <- makeCacheMatrix(matrix(c(1,1,1,3,4,3,3,3,4), nrow=3, ncol=3))
cacheSolve(m)
source("cachematrix.R")
m <- makeCacheMatrix(matrix(c(1,1,1,3,4,3,3,3,4), nrow=3, ncol=3))
cacheSolve(m)
cacheSolve(m)
m <- makeCacheMatrix(matrix(c(10000), nrow=100, ncol=100))
cacheSolve(m)
k   <- 2000
rho <- .3
S       <- matrix(rep(rho, k*k), nrow=k)
m <- makeCacheMatrix(S)
cacheSolve(m)
m <- makeCacheMatrix(matrix(c(1000000000), nrow=1000, ncol=1000))
cacheSolve(m)
m <- makeCacheMatrix(matrix(trunc(rnorm(512*512)*100), 512,512))
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
